version: '3.8'

services:
  # KRAI Engine API with Supabase Integration
  krai-supabase-api:
    build:
      context: .
      dockerfile: Dockerfile.supabase
    ports:
      - "8001:8001"
    environment:
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - SUPABASE_PASSWORD=${SUPABASE_PASSWORD}
      - SUPABASE_STORAGE_BUCKET=krai-documents
      - SUPABASE_IMAGE_BUCKET=krai-images
      - HOST=0.0.0.0
      - PORT=8001
      - RELOAD=false
    volumes:
      - ./uploads:/app/uploads
      - ./static:/app/static
      - ./config:/app/config
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Ollama for local AI models
  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    restart: unless-stopped
    environment:
      - OLLAMA_HOST=0.0.0.0

  # Open WebUI
  openwebui:
    image: ghcr.io/open-webui/open-webui:main
    ports:
      - "8080:8080"
    volumes:
      - openwebui_data:/app/backend/data
    environment:
      - OLLAMA_BASE_URL=http://ollama:11434
      - WEBUI_SECRET_KEY=your-secret-key-here
      - KRAI_API_URL=http://krai-supabase-api:8001
    depends_on:
      - ollama
      - krai-supabase-api
    restart: unless-stopped

  # Redis for caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

volumes:
  ollama_data:
  openwebui_data:
  redis_data:

networks:
  default:
    name: krai-supabase-network
