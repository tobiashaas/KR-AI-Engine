# =====================================
# KRAI ENGINE - ENVIRONMENT CONFIGURATION TEMPLATE
# Version 7.0 - Production Ready with Storage Options
# =====================================

# =====================================
# SUPABASE CONFIGURATION (REQUIRED)
# =====================================

# Supabase Project Configuration
SUPABASE_URL=https://your-project-id.supabase.co
SUPABASE_SERVICE_ROLE_KEY=your_service_role_key_here
SUPABASE_ANON_KEY=your_anon_key_here

# Direct PostgreSQL Connection (Advanced)
DATABASE_URL=postgresql://postgres:your_password@db.your-project-id.supabase.co:5432/postgres
DB_HOST=db.your-project-id.supabase.co
DB_PORT=5432
DB_NAME=postgres
DB_USER=postgres
DB_PASSWORD=your_database_password

# =====================================
# STORAGE CONFIGURATION
# Choose one: supabase|s3|r2|local
# =====================================

# Primary Storage Provider
STORAGE_PROVIDER=supabase
STORAGE_BUCKET=krai-documents

# Supabase Storage (Recommended for small-medium scale)
SUPABASE_STORAGE_BUCKET=krai-documents
SUPABASE_STORAGE_URL=${SUPABASE_URL}/storage/v1/object/public

# AWS S3 Configuration (Enterprise scale)
AWS_ACCESS_KEY_ID=your_aws_access_key
AWS_SECRET_ACCESS_KEY=your_aws_secret_key
AWS_DEFAULT_REGION=us-east-1
AWS_BUCKET=krai-documents-s3

# Cloudflare R2 Configuration (Cost-effective alternative)
R2_ACCOUNT_ID=your_r2_account_id
R2_ACCESS_KEY_ID=your_r2_access_key
R2_SECRET_ACCESS_KEY=your_r2_secret_key
R2_BUCKET=krai-documents-r2
R2_ENDPOINT=https://your_account_id.r2.cloudflarestorage.com

# Local Storage (Development only)
LOCAL_STORAGE_PATH=./storage/documents
LOCAL_STORAGE_URL=http://localhost:8000/storage

# =====================================
# AI & VECTOR SEARCH CONFIGURATION
# =====================================

# Vector Embeddings Provider (openai|ollama|huggingface)
EMBEDDING_PROVIDER=openai
EMBEDDING_MODEL=text-embedding-3-small
EMBEDDING_DIMENSIONS=1536

# OpenAI Configuration (Recommended for production)
OPENAI_API_KEY=sk-your_openai_api_key_here
OPENAI_ORG_ID=org-your_organization_id

# Ollama Configuration (Self-hosted alternative)
OLLAMA_URL=http://localhost:11434
OLLAMA_EMBEDDING_MODEL=nomic-embed-text
OLLAMA_CHAT_MODEL=llama3.1:8b

# Vector Search Parameters
SIMILARITY_THRESHOLD=0.7
MAX_SEARCH_RESULTS=20
VECTOR_INDEX_TYPE=hnsw

# =====================================
# HP-SPECIFIC CONFIGURATION
# =====================================

# HP CPMD Processing
CPMD_SUPPORTED_VERSIONS=v2.1,v2.2,v2.3,v2.4
CPMD_BATCH_SIZE=100
CPMD_PROCESSING_TIMEOUT=300

# HP Product Settings
HP_MANUFACTURER_ID=auto-detect
HP_DEFAULT_SERIES=OfficeJet Pro
OPTION_VALIDATION_ENABLED=true
BRIDGE_FINISHER_VALIDATION=true

# HP Error Code Processing
ERROR_CODE_NORMALIZATION=true
ALTERNATIVE_ERROR_CODES=true
ERROR_CODE_FUZZY_MATCH=0.8

# =====================================
# APPLICATION CONFIGURATION
# =====================================

# Server Settings
API_PORT=8001
FRONTEND_PORT=8002
API_HOST=localhost
FRONTEND_HOST=localhost
DEBUG=false
APP_ENV=production

# API Configuration
API_RATE_LIMIT=1000/hour
API_RATE_LIMIT_BURST=100
MAX_UPLOAD_SIZE=100MB
ALLOWED_FILE_TYPES=pdf,xml,docx,txt

# CORS Configuration (Update for your domain)
CORS_ORIGINS=https://your-frontend-domain.com,http://localhost:3000
CORS_METHODS=GET,POST,PUT,DELETE,OPTIONS
CORS_HEADERS=Content-Type,Authorization,X-Requested-With

# =====================================
# DOCUMENT PROCESSING CONFIGURATION
# =====================================

# Text Processing
MAX_CHUNK_SIZE=1000
MIN_CHUNK_SIZE=100
CHUNK_OVERLAP=50
OCR_ENABLED=true
OCR_LANGUAGE=eng

# Content Extraction
EXTRACT_ENTITIES=true
EXTRACT_PART_NUMBERS=true
EXTRACT_ERROR_CODES=true
QUALITY_SCORE_THRESHOLD=0.6

# PDF Processing
PDF_EXTRACTION_METHOD=pymupdf
PDF_OCR_THRESHOLD=0.5
PDF_MAX_PAGES=1000

# =====================================
# SECURITY CONFIGURATION (IMPORTANT!)
# =====================================

# JWT Authentication (Generate secure key for production!)
JWT_SECRET=your_secure_jwt_secret_minimum_32_characters_long_random_string
JWT_ALGORITHM=HS256
JWT_EXPIRATION=24h
JWT_REFRESH_EXPIRATION=7d

# API Security
API_KEY_REQUIRED=true
RATE_LIMITING_ENABLED=true
REQUEST_VALIDATION=strict

# Database Security
RLS_ENABLED=true
ROW_LEVEL_SECURITY=true
AUDIT_LOGGING=true

# =====================================
# MONITORING & LOGGING
# =====================================

# Logging Configuration
LOG_LEVEL=INFO
LOG_FILE=./logs/krai_engine.log
LOG_MAX_SIZE=100MB
LOG_BACKUP_COUNT=5
LOG_FORMAT=json

# Performance Monitoring
PERFORMANCE_TRACKING=true
QUERY_PERFORMANCE_THRESHOLD=200ms
SLOW_QUERY_LOGGING=true

# Health Checks
HEALTH_CHECK_INTERVAL=30s
DATABASE_HEALTH_CHECK=true
STORAGE_HEALTH_CHECK=true
AI_MODEL_HEALTH_CHECK=true

# =====================================
# CACHE CONFIGURATION (OPTIONAL)
# =====================================

# Redis Configuration (For production caching)
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=your_redis_password
REDIS_DB=0
CACHE_TTL=3600

# In-Memory Cache
MEMORY_CACHE_SIZE=128MB
EMBEDDING_CACHE_SIZE=512MB
QUERY_CACHE_ENABLED=true

# =====================================
# DEVELOPMENT SETTINGS
# =====================================

# Development Tools (Set to false for production)
HOT_RELOAD=false
AUTO_MIGRATION=false
SEED_DATA=false
MOCK_AI_RESPONSES=false

# Testing Configuration
TEST_DATABASE_URL=postgresql://postgres:test@localhost:5432/krai_test
TEST_STORAGE_PROVIDER=local
INTEGRATION_TESTS=false

# =====================================
# SETUP INSTRUCTIONS
# =====================================

# 1. SUPABASE SETUP:
#    - Create project at https://supabase.com
#    - Copy URL and keys from Settings > API
#    - Run database migrations from /database_migrations/STEP_BY_STEP/

# 2. STORAGE SETUP:
#    - Choose STORAGE_PROVIDER based on your needs:
#      * supabase: Easy setup, good for small-medium scale
#      * s3: Enterprise scale, higher costs
#      * r2: Cost-effective, good performance  
#      * local: Development only

# 3. AI SETUP:
#    - Choose EMBEDDING_PROVIDER:
#      * openai: Best quality, requires API key, costs per usage
#      * ollama: Self-hosted, free, requires local setup
#    - For OpenAI: Get API key from https://platform.openai.com
#    - For Ollama: Install locally and pull embedding models

# 4. SECURITY SETUP:
#    - Generate strong JWT_SECRET (32+ characters)
#    - Set appropriate CORS_ORIGINS for your domain
#    - Enable API_KEY_REQUIRED for production
#    - Configure RLS_ENABLED for database security

# 5. MONITORING SETUP:
#    - Configure logging directory and permissions
#    - Set up Redis for production caching (optional)
#    - Configure health check endpoints

# =====================================
# PERFORMANCE TUNING GUIDELINES
# =====================================

# Vector Search Optimization:
# - EMBEDDING_DIMENSIONS=1536 for OpenAI text-embedding-3-small
# - SIMILARITY_THRESHOLD=0.7 balances precision/recall
# - MAX_SEARCH_RESULTS=20 optimizes UI performance

# Document Processing Optimization:
# - MAX_CHUNK_SIZE=1000 works well for HP technical docs
# - CHUNK_OVERLAP=50 maintains context between chunks
# - PDF_MAX_PAGES=1000 prevents memory issues

# Database Performance:
# - Enable QUERY_CACHE for frequently accessed data
# - Set QUERY_PERFORMANCE_THRESHOLD to monitor slow queries
# - Use connection pooling for high-traffic deployments

# =====================================
# PRODUCTION DEPLOYMENT CHECKLIST
# =====================================

# Security Checklist:
# [ ] JWT_SECRET is strong and unique
# [ ] DEBUG=false and APP_ENV=production
# [ ] API_KEY_REQUIRED=true
# [ ] CORS_ORIGINS set to actual domain
# [ ] RLS_ENABLED=true for database security
# [ ] LOG_LEVEL=WARNING or ERROR for production

# Performance Checklist:
# [ ] Redis configured for caching
# [ ] Appropriate storage provider selected
# [ ] Database indexes created (via migrations)
# [ ] Health checks configured
# [ ] Monitoring and logging set up

# Infrastructure Checklist:
# [ ] Database backups configured
# [ ] SSL certificates in place
# [ ] Load balancing if needed
# [ ] CDN for file serving
# [ ] Error tracking (Sentry, etc.)

# =====================================
# SUPPORT & DOCUMENTATION
# =====================================

# Documentation:
# - README.md: General setup and architecture
# - LLM_INSTRUCTIONS.md: AI system configuration
# - /database_migrations/: Database setup guide

# Support:
# - GitHub Issues: https://github.com/tobiashaas/KRAI-Engine/issues
# - Documentation: https://github.com/tobiashaas/KRAI-Engine/wiki